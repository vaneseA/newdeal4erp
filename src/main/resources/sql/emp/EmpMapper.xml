<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.happyjob.study.emp.dao.EmpDao">
    <!--  목록 조회 -->
    <select id="empList" resultType="kr.happyjob.study.emp.model.EmpModel">
    select em.loginId
           ,em.name
           ,em.dept_cd
           ,em.level_cd
           ,em.emp_sdate
           ,em.emp_work_yn
    from tb_emp em

        <where>
            <if test="(deptcd != null) and (!deptcd.equals(''))">
                and em.dept_cd = #{deptcd}
            </if>
            <if test="(lvcd != null) and (!lvcd.equals(''))">
                and em.level_cd = #{lvcd}
            </if>
            <if test="(ename != null) and (!ename.equals(''))">
                <choose>
                    <when
                            test="searchKey eq 'loginid'.toString()">
                        and em.loginId Like CONCAT('%', #{ename}, '%')
                    </when>
                    <when
                            test="searchKey eq 'name'.toString()">
                        and em.name LIKE CONCAT('%', #{ename}, '%')
                    </when>
                    <otherwise>
                        and (   em.loginId Like CONCAT('%', #{ename}, '%')
                        or      em.name LIKE CONCAT('%', #{ename}, '%')
                        )
                    </otherwise>
                </choose>
            </if>
        </where>
    ORDER BY em.dept_cd
    LIMIT #{pageindex}, #{pageSize}
    
    </select>

    <select id="countempList" resultType="int">
        select count(*)
        from tb_emp em

        <where>
            <if test="(deptcd != null) and (!deptcd.equals(''))">
                and em.dept_cd = #{deptcd}
            </if>
            <if test="(lvcd != null) and (!lvcd.equals(''))">
                and em.level_cd = #{lvcd}
            </if>
            <if test="(ename != null) and (!ename.equals(''))">
                <choose>
                    <when
                            test="searchKey eq 'loginid'.toString()">
                        and em.loginId Like CONCAT('%', #{ename}, '%')
                    </when>
                    <when
                            test="searchKey eq 'name'.toString()">
                        and em.name LIKE CONCAT('%', #{ename}, '%')
                    </when>
                    <otherwise>
                        and (   em.loginId Like CONCAT('%', #{ename}, '%')
                        or      em.name LIKE CONCAT('%', #{ename}, '%')
                        )
                    </otherwise>
                </choose>
            </if>
        </where>

    </select>

    <select id="empSelectOne" resultType="kr.happyjob.study.emp.model.EmpModel">
        select em.loginID,
        em.emp_birth,
        em.name,
        em.emp_sex,
        em.emp_edu,
        em.emp_email,
        em.emp_hp,
        em.emp_zip,
        em.emp_addr,
        em.emp_dt_addr,
        em.bk_cd,
        em.emp_account,
        em.dept_cd,
        em.level_cd,
        em.emp_yr_sal,
        em.emp_sdate,
        em.emp_edate,
        em.retire_reason
        from tb_emp em



        where em.loginId= #{loginId}

    </select>

    <insert id="empInsert">
        <selectKey resultType="int" keyProperty="id" order="BEFORE">
            select ifnull(max(loginID),202101035) + 1 from tb_emp
        </selectKey>
        insert into tb_emp
        (
        loginID,
        emp_work_yn,
        sal_date,
        emp_birth,
        name,
        emp_sex,
        emp_edu,
        emp_email,
        emp_hp,
        emp_zip,
        emp_addr,
        emp_dt_addr,
        bk_cd,
        emp_account,
        dept_cd,
        level_cd,
        emp_sdate,
        emp_yr_sal,
        emp_account,
        sal_san,
        sal_ko,
        sal_kun,
        sal_kuk,

        sal_pre,
        sal_after
        )
        values (
        #{id}
        ,'Y'
        ,now()

            ,#{emp_birth}

            ,#{name}

            ,#{emp_sex}

            ,#{emp_edu}

            ,#{emp_email}

            ,#{emp_hp}

            ,#{emp_zip}

            ,#{emp_addr}

            ,#{emp_dt_addr}

            ,#{sal_san}

            ,#{sal_ko}

            ,#{sal_kun}

            ,#{sal_kuk}

            ,#{sal_pre}

            ,#{sal_after}

        )
    </insert>




</mapper>
